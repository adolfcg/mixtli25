name: Code Check & Docker Builder

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
      # Checkout your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python for linting and SAST
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Install security tools and requirements
      - name: Install security tools and app dependencies
        run: |
          pip install bandit semgrep 
          pip install -r requirements.txt

      # Run Bandit (SAST)
      - name: Run Bandit
        run: bandit -r vuln_app.py
        continue-on-error: true

      # Run Semgrep
      - name: Run Semgrep
        run: semgrep --config=auto --output=semgrep-report.txt .
             cat semgrep-report.txt
        continue-on-error: true

      # Build Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image for vuln_app..."
          docker build -t vuln-app:latest .

      # **Authenticate to AWS**
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   #

      # **Login to Amazon ECR**
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # **Tag and push Docker image to ECR**
      - name: Push Docker image to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI="$ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION || 'us-east-1' }}.amazonaws.com/repo-demo"

          echo "Tagging Docker image as: $ECR_URI:latest"
          docker tag vuln-app:latest $ECR_URI:latest

          echo "Pushing Docker image to ECR..."
          docker push $ECR_URI:latest
